<?php

namespace AppBundle\Repository;

/**
 * TradelandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TradelandRepository extends \Doctrine\ORM\EntityRepository
{
	public function findByNot($user)
    {
        $qb = $this->createQueryBuilder("t")
            ->where(':user NOT MEMBER OF t.users')
            ->andWhere('t.owner != :user')
            ->andWhere('t.blocked != :status')
            ->setParameters(['user' => $user, 'status' => true]);

        return $qb->getQuery()->getResult();
    }

    public function getByUser($user)
    {
        $qb = $this->createQueryBuilder("t")
            ->where(':user MEMBER OF t.users')
            ->orWhere('t.owner = :user')
            ->andWhere('t.blocked != :status')
            ->setParameters(['user' => $user, 'status' => true]);

        return $qb->getQuery()->getResult();
    }

    public function getTradelands($user, $group)
    {
        $qb = $this->createQueryBuilder("t")
            ->where(':user MEMBER OF t.users')
            ->andWhere('t.id = :group')
            ->andWhere('t.blocked != :status')
            ->setParameters(['user' => $user, 'group' => $group, 'status' => true]);

        return $qb->getQuery()->getResult();
    }

    public function getLatestPosts() {
		$query = "SELECT tradeland_id FROM users_tradelands WHERE user_id = ?";
		$params = array(\App::getInstance()->getUserId());

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$rows = $sth->fetchAll();

		$ids = array();

		foreach($rows as $row) {
			$ids[] = $row['tradeland_id'];
		}

		$query = "SELECT id FROM tradeland WHERE owner_id = ?";
		$params = array(\App::getInstance()->getUserId());

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$rows = $sth->fetchAll();

		foreach($rows as $row) {
			$ids[] = $row['id'];
		}

		if(count($ids) == 0) {
			return array();
		}

		$query = "SELECT p.id,  p.tradeland_id, p.user_id,  p.origin_user_id,  p.text, u.name, u.avatar
		FROM post p
		INNER JOIN user u ON u.id = p.user_id
		WHERE p.tradeland_id IN (:ids)
		AND p.id NOT IN (SELECT post_id FROM post_hidden WHERE user_id = :me)
		AND p.user_id != :me
		ORDER BY p.created_at DESC
		LIMIT 10";

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute(array(
			'ids' => implode(",", $ids),
			'me' => \App::getInstance()->getUserId()
		));

		return $sth->fetchAll();
    }
}
