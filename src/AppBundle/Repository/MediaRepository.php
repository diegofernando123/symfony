<?php

namespace AppBundle\Repository;

/**
 * MediaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediaRepository extends \Doctrine\ORM\EntityRepository
{

	public function getOwnerId($media_id) {
		$query = "SELECT user_id FROM media WHERE id = ?";
		$params = array($media_id);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$row = $sth->fetch();

		return $row['user_id'];
	}

	public function findByName($user_id, $name) {
		$query = "SELECT id FROM media WHERE user_id = ? AND name = ? ORDER BY id DESC LIMIT 1";
		$params = array($user_id, $name);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$row = $sth->fetch();

		return $row == null ? null : $this->find($row['id']);
	}

	public function listVoted($media_id) {
		$query = "SELECT u.id, u.name FROM media_votes v INNER JOIN user u ON u.id = v.user_id WHERE v.media_id = ?";
		$params = array($media_id);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		return $sth->fetchAll();
	}

	public function hasVote($user_id, $media_id) {
		$query = "SELECT COUNT(*) AS CNT FROM media_votes WHERE user_id = ? AND media_id = ?";
		$params = array($user_id, $media_id);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$row = $sth->fetch();

		return $row['CNT'] >= 1;
	}

	public function addVote($user_id, $media_id) {
		$query = "INSERT INTO media_votes (user_id, media_id) VALUES (?, ?)";
		$params = array($user_id, $media_id);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
	}

	public function numVotes($media_id) {
		$query = "SELECT COUNT(*) AS CNT FROM media_votes WHERE media_id = ?";
		$params = array($media_id);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$row = $sth->fetch();

		return $row['CNT'];
	}

	public function updateFilename($user_id, $filename, $original_name, $directory) {
		$query = "SELECT id, name FROM media WHERE user_id = ? AND original_name = ?";
		$params = array($user_id, $original_name);

		$sth = $this->getEntityManager()->getConnection()->prepare($query);
		$sth->execute($params);
		$rows = $sth->fetchAll();

		foreach($rows as $row) {
			$query = "UPDATE media SET name = ? WHERE id = ?";
			$params = array($filename, $row['id']);

			$sth = $this->getEntityManager()->getConnection()->prepare($query);
			$sth->execute($params);

			unlink(  $directory .  '/' . $row['name']);
		}
	}
}
